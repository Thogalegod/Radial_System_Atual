<div class="content-header">
  <h1 class="page-title">Transformador MT</h1>
</div>

<div class="card">
  <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px;">
    <h2 style="font-size: 20px; font-weight: 600; color: #1f2937;">Transformadores MT em Estoque</h2>
    <div style="display: flex; gap: 12px; align-items: center;">
      <button type="button" class="btn btn-secondary" onclick="openFilterModal()" style="display: flex; align-items: center; gap: 8px;">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"/>
        </svg>
        <span>Filtrar</span>
      </button>
      <%= link_to new_medium_voltage_transformer_path, class: 'btn btn-primary' do %>
        <span>+</span>
        <span>Adicionar Transformador</span>
      <% end %>
    </div>
  </div>

  <% if @medium_voltage_transformers.any? %>
    <table class="table">
      <thead>
        <tr>
          <th>Número</th>
          <th>Tensão Secundária</th>
          <th>Potência</th>
          <th>Localização</th>
          <th>Status</th>
          <th>Refrigeração</th>
          <th>Bandeira</th>
          <th>Instalação</th>
          <th>Ações</th>
        </tr>
      </thead>
      <tbody>
        <% @medium_voltage_transformers.each do |transformer| %>
          <tr>
            <td><strong><%= transformer.serial_number %></strong></td>
            <td>
              <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.bt_option.color %>; color: #fff; font-weight: 600;">
                <%= transformer.voltage_display %>
              </span>
            </td>
            <td>
              <% if transformer.power_option %>
                <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.power_option.color %>; color: #fff; font-weight: 600;">
                  <%= transformer.power_display %>
                </span>
              <% else %>
                <span style="color: #6b7280;">Não definida</span>
              <% end %>
            </td>
            <td>
              <% if transformer.location %>
                <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.location.color %>; color: #fff; font-weight: 600;">
                  <%= transformer.location.value %>
                </span>
              <% else %>
                <span style="color: #6b7280;">Não definida</span>
              <% end %>
            </td>
            <td>
              <% if transformer.status %>
                <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.status.color %>; color: #fff; font-weight: 600;">
                  <%= transformer.status.value %>
                </span>
              <% else %>
                <span style="color: #6b7280;">Não definido</span>
              <% end %>
            </td>
            <td>
              <% if transformer.cooling_option %>
                <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.cooling_option.color %>; color: #fff; font-weight: 600;">
                  <%= transformer.cooling_display %>
                </span>
              <% else %>
                <span style="color: #6b7280;">Não definida</span>
              <% end %>
            </td>
            <td>
              <% if transformer.flag_option %>
                <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.flag_option.color %>; color: #fff; font-weight: 600;">
                  <%= transformer.flag_display %>
                </span>
              <% else %>
                <span style="color: #6b7280;">Não definida</span>
              <% end %>
            </td>
            <td>
              <% if transformer.installation_option %>
                <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: <%= transformer.installation_option.color %>; color: #fff; font-weight: 600;">
                  <%= transformer.installation_display %>
                </span>
              <% else %>
                <span style="color: #6b7280;">Não definida</span>
              <% end %>
            </td>
            <td>
              <div style="display: flex; gap: 8px;">
                <%= link_to medium_voltage_transformer_path(transformer), class: 'btn btn-secondary btn-icon', title: 'Visualizar' do %>
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                    <circle cx="12" cy="12" r="3"/>
                  </svg>
                <% end %>
                <%= link_to edit_medium_voltage_transformer_path(transformer), class: 'btn btn-secondary btn-icon', title: 'Editar' do %>
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/>
                    <path d="m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z"/>
                  </svg>
                <% end %>
                <form action="<%= medium_voltage_transformer_path(transformer) %>" method="post" style="display: inline;">
                  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                  <%= hidden_field_tag :_method, 'delete' %>
                  <button type="submit" 
                          class="btn btn-danger btn-icon" 
                          title="Excluir"
                          onclick="return confirm('Tem certeza que deseja excluir o transformador <%= transformer.serial_number %>?')">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <polyline points="3,6 5,6 21,6"/>
                      <path d="m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"/>
                      <line x1="10" y1="11" x2="10" y2="17"/>
                      <line x1="14" y1="11" x2="14" y2="17"/>
                    </svg>
                  </button>
                </form>
              </div>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  <% else %>
    <div style="text-align: center; padding: 48px 24px; color: #6b7280;">
      <div style="font-size: 48px; margin-bottom: 16px;">⚡</div>
      <h3 style="font-size: 18px; font-weight: 600; margin-bottom: 8px;">Nenhum transformador MT em estoque</h3>
      <p style="margin-bottom: 24px;">Comece cadastrando seu primeiro transformador MT</p>
      <%= link_to new_medium_voltage_transformer_path, class: 'btn btn-primary' do %>
        <span>+</span>
        <span>Adicionar Transformador</span>
      <% end %>
    </div>
  <% end %>
</div>

<!-- Modal de Filtros -->
<div id="filterModal" class="filter-modal-overlay">
  <div class="filter-modal">
    <div class="filter-modal-header">
      <button type="button" class="filter-btn filter-btn-secondary" onclick="clearAllFilters()">
        Limpar
      </button>
      <h3 class="filter-modal-title">Filtros</h3>
      <button type="button" class="filter-btn filter-btn-primary" onclick="applyFilters()">
        Concluído
      </button>
    </div>
    
    <div class="filter-modal-body">
      <div class="filter-section">
        <h4 class="filter-section-title">Ordenação</h4>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_serial_number" value="serial_number" class="filter-radio" checked>
          <label for="sort_serial_number" class="filter-label">Número de Série</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc active" data-field="serial_number" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="serial_number" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_bt_option" value="bt_option" class="filter-radio">
          <label for="sort_bt_option" class="filter-label">Tensão Secundária</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="bt_option" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="bt_option" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_power_option" value="power_option" class="filter-radio">
          <label for="sort_power_option" class="filter-label">Potência</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="power_option" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="power_option" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_location" value="location" class="filter-radio">
          <label for="sort_location" class="filter-label">Localização</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="location" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="location" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_status" value="status" class="filter-radio">
          <label for="sort_status" class="filter-label">Status</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="status" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="status" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_cooling_option" value="cooling_option" class="filter-radio">
          <label for="sort_cooling_option" class="filter-label">Refrigeração</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="cooling_option" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="cooling_option" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_flag_option" value="flag_option" class="filter-radio">
          <label for="sort_flag_option" class="filter-label">Bandeira</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="flag_option" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="flag_option" data-direction="desc">↓</button>
          </div>
        </div>
        
        <div class="filter-option">
          <input type="radio" name="sort_field" id="sort_installation_option" value="installation_option" class="filter-radio">
          <label for="sort_installation_option" class="filter-label">Instalação</label>
          <div class="sort-direction">
            <button type="button" class="sort-btn sort-asc" data-field="installation_option" data-direction="asc">↑</button>
            <button type="button" class="sort-btn sort-desc" data-field="installation_option" data-direction="desc">↓</button>
          </div>
        </div>
      </div>
      
      <div class="filter-section">
        <h4 class="filter-section-title">Filtros Especiais</h4>
        
        <div class="filter-option">
          <input type="checkbox" id="filter_no_location" class="filter-checkbox">
          <label for="filter_no_location" class="filter-label">Sem Localização</label>
        </div>
        
        <div class="filter-option">
          <input type="checkbox" id="filter_no_status" class="filter-checkbox">
          <label for="filter_no_status" class="filter-label">Sem Status</label>
        </div>
        
        <div class="filter-option">
          <input type="checkbox" id="filter_no_power" class="filter-checkbox">
          <label for="filter_no_power" class="filter-label">Sem Potência</label>
        </div>
        
        <div class="filter-option">
          <input type="checkbox" id="filter_with_notes" class="filter-checkbox">
          <label for="filter_with_notes" class="filter-label">Com Observações</label>
        </div>
        
        <div class="filter-option">
          <input type="checkbox" id="filter_no_notes" class="filter-checkbox">
          <label for="filter_no_notes" class="filter-label">Sem Observações</label>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Estado dos filtros
let filterState = {
  no_location: false,
  no_status: false,
  no_power: false,
  with_notes: false,
  no_notes: false
};

// Estado da ordenação
let sortState = {
  field: 'serial_number',
  direction: 'asc'
};

// Abrir modal de filtros
function openFilterModal() {
  document.getElementById('filterModal').classList.add('show');
  updateCheckboxesFromState();
}

// Fechar modal de filtros
function closeFilterModal() {
  document.getElementById('filterModal').classList.remove('show');
}

// Limpar todos os filtros
function clearAllFilters() {
  filterState = {
    no_location: false,
    no_status: false,
    no_power: false,
    with_notes: false,
    no_notes: false
  };
  sortState = {
    field: 'serial_number',
    direction: 'asc'
  };
  updateCheckboxesFromState();
  updateSortState();
}

// Aplicar filtros
function applyFilters() {
  console.log('Aplicando filtros:', filterState);
  console.log('Ordenação:', sortState);
  closeFilterModal();
  
  // Construir parâmetros de filtro
  const filterParams = new URLSearchParams();
  
  // Adicionar filtros especiais
  if (filterState.no_location) filterParams.append('no_location', 'true');
  if (filterState.no_status) filterParams.append('no_status', 'true');
  if (filterState.no_power) filterParams.append('no_power', 'true');
  if (filterState.with_notes) filterParams.append('with_notes', 'true');
  if (filterState.no_notes) filterParams.append('no_notes', 'true');
  
  // Adicionar ordenação
  filterParams.append('sort_field', sortState.field);
  filterParams.append('sort_direction', sortState.direction);
  
  // Fazer requisição AJAX
  fetch(`/medium_voltage_transformers/filter?${filterParams.toString()}`, {
    method: 'GET',
    headers: {
      'X-Requested-With': 'XMLHttpRequest',
      'Accept': 'application/json'
    }
  })
  .then(response => response.json())
  .then(data => {
    updateTableWithFilteredData(data.transformers);
  })
  .catch(error => {
    console.error('Erro ao aplicar filtros:', error);
    alert('Erro ao aplicar filtros. Tente novamente.');
  });
}

// Atualizar tabela com dados filtrados
function updateTableWithFilteredData(transformers) {
  const tbody = document.querySelector('table tbody');
  if (!tbody) return;
  
  tbody.innerHTML = '';
  
  if (transformers.length === 0) {
    tbody.innerHTML = `
      <tr>
        <td colspan="9" style="text-align: center; padding: 48px 24px; color: #6b7280;">
          <div style="font-size: 48px; margin-bottom: 16px;">🔍</div>
          <h3 style="font-size: 18px; font-weight: 600; margin-bottom: 8px;">Nenhum resultado encontrado</h3>
          <p>Nenhum transformador MT corresponde aos filtros aplicados</p>
        </td>
      </tr>
    `;
    return;
  }
  
  transformers.forEach(transformer => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td><strong>${transformer.serial_number}</strong></td>
      <td>
        <span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.bt_color}; color: #fff; font-weight: 600;">
          ${transformer.voltage_display}
        </span>
      </td>
      <td>
        ${transformer.power_display !== 'Não definida' 
          ? `<span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.power_color}; color: #fff; font-weight: 600;">${transformer.power_display}</span>`
          : '<span style="color: #6b7280;">Não definida</span>'
        }
      </td>
      <td>
        ${transformer.location_display !== 'Não definida'
          ? `<span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.location_color}; color: #fff; font-weight: 600;">${transformer.location_display}</span>`
          : '<span style="color: #6b7280;">Não definida</span>'
        }
      </td>
      <td>
        ${transformer.status_display !== 'Não definido'
          ? `<span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.status_color}; color: #fff; font-weight: 600;">${transformer.status_display}</span>`
          : '<span style="color: #6b7280;">Não definido</span>'
        }
      </td>
      <td>
        ${transformer.cooling_display !== 'Não definida'
          ? `<span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.cooling_color}; color: #fff; font-weight: 600;">${transformer.cooling_display}</span>`
          : '<span style="color: #6b7280;">Não definida</span>'
        }
      </td>
      <td>
        ${transformer.flag_display !== 'Não definida'
          ? `<span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.flag_color}; color: #fff; font-weight: 600;">${transformer.flag_display}</span>`
          : '<span style="color: #6b7280;">Não definida</span>'
        }
      </td>
      <td>
        ${transformer.installation_display !== 'Não definida'
          ? `<span style="display: inline-block; padding: 6px 16px; border-radius: 8px; background: ${transformer.installation_color}; color: #fff; font-weight: 600;">${transformer.installation_display}</span>`
          : '<span style="color: #6b7280;">Não definida</span>'
        }
      </td>
      <td>
        <div style="display: flex; gap: 8px;">
          <a href="/medium_voltage_transformers/${transformer.id}" class="btn btn-secondary btn-icon" title="Visualizar">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
              <circle cx="12" cy="12" r="3"/>
            </svg>
          </a>
          <a href="/medium_voltage_transformers/${transformer.id}/edit" class="btn btn-secondary btn-icon" title="Editar">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/>
              <path d="m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z"/>
            </svg>
          </a>
          <form action="/medium_voltage_transformers/${transformer.id}" method="post" style="display: inline;">
            <input type="hidden" name="authenticity_token" value="${document.querySelector('meta[name="csrf-token"]').getAttribute('content')}">
            <input type="hidden" name="_method" value="delete">
            <button type="submit" class="btn btn-danger btn-icon" title="Excluir" onclick="return confirm('Tem certeza que deseja excluir o transformador ${transformer.serial_number}?')">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="3,6 5,6 21,6"/>
                <path d="m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"/>
                <line x1="10" y1="11" x2="10" y2="17"/>
                <line x1="14" y1="11" x2="14" y2="17"/>
              </svg>
            </button>
          </form>
        </div>
      </td>
    `;
    tbody.appendChild(row);
  });
}

// Atualizar checkboxes baseado no estado
function updateCheckboxesFromState() {
  Object.keys(filterState).forEach(key => {
    const checkbox = document.getElementById(`filter_${key}`);
    if (checkbox) {
      checkbox.checked = filterState[key];
    }
  });
  
  // Atualizar ordenação
  updateSortState();
}

// Atualizar estado baseado nos checkboxes
function updateStateFromCheckboxes() {
  Object.keys(filterState).forEach(key => {
    const checkbox = document.getElementById(`filter_${key}`);
    if (checkbox) {
      filterState[key] = checkbox.checked;
    }
  });
}

// Atualizar estado da ordenação
function updateSortState() {
  const selectedRadio = document.querySelector('input[name="sort_field"]:checked');
  if (selectedRadio) {
    sortState.field = selectedRadio.value;
  }
  
  // Atualizar botões de direção
  const sortButtons = document.querySelectorAll('.sort-btn');
  sortButtons.forEach(btn => {
    btn.classList.remove('active');
    if (btn.dataset.field === sortState.field && btn.dataset.direction === sortState.direction) {
      btn.classList.add('active');
    }
  });
}

// Definir direção de ordenação
function setSortDirection(field, direction) {
  sortState.field = field;
  sortState.direction = direction;
  
  // Atualizar radio button
  const radio = document.getElementById(`sort_${field}`);
  if (radio) {
    radio.checked = true;
  }
  
  // Atualizar botões
  const sortButtons = document.querySelectorAll('.sort-btn');
  sortButtons.forEach(btn => {
    btn.classList.remove('active');
    if (btn.dataset.field === field && btn.dataset.direction === direction) {
      btn.classList.add('active');
    }
  });
}

// Event listeners
document.addEventListener('DOMContentLoaded', function() {
  // Event listeners para checkboxes
  const checkboxes = document.querySelectorAll('.filter-checkbox');
  checkboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateStateFromCheckboxes);
  });
  
  // Event listeners para radio buttons de ordenação
  const radioButtons = document.querySelectorAll('.filter-radio');
  radioButtons.forEach(radio => {
    radio.addEventListener('change', updateSortState);
  });
  
  // Event listeners para botões de ordenação
  const sortButtons = document.querySelectorAll('.sort-btn');
  sortButtons.forEach(btn => {
    btn.addEventListener('click', function() {
      setSortDirection(this.dataset.field, this.dataset.direction);
    });
  });
  
  // Fechar modal ao clicar fora
  document.getElementById('filterModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeFilterModal();
    }
  });
  
  // Inicializar estado
  updateSortState();
});
</script>
