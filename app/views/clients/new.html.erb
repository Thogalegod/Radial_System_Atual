<div class="content-header">
  <h1 class="page-title">Novo Cliente</h1>
  <p class="page-subtitle">Cadastre um novo cliente no sistema</p>
</div>

<div class="card">
  <%= form_with model: @client, local: true do |form| %>
    <% if @client.errors.any? %>
      <div class="alert alert-danger">
        <h3><%= pluralize(@client.errors.count, "erro") %> impediram o cadastro:</h3>
        <ul>
          <% @client.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <!-- Informações do Cliente -->
    <div class="form-group">
      <%= form.label :name, 'Nome / Razão Social', class: 'form-label' %>
      <%= form.text_field :name, class: 'form-control', placeholder: 'Digite o nome ou razão social' %>
    </div>

    <div class="form-row">
      <div class="form-group">
        <%= form.label :document_type, 'Tipo de Documento', class: 'form-label' %>
        <%= form.select :document_type, [['CPF', 'CPF'], ['CNPJ', 'CNPJ']], { selected: @client.document_type.presence || 'CNPJ' }, class: 'form-control', onchange: 'updateDocumentPlaceholder()' %>
      </div>
      <div class="form-group">
        <%= form.label :document_number, 'Número do Documento', class: 'form-label' %>
        <%= form.text_field :document_number, class: 'form-control', id: 'document_number', placeholder: @client.document_type == 'CPF' ? '000.000.000-00' : '00.000.000/0000-00', oninput: 'formatDocument(this.value)' %>
      </div>
    </div>

    <div class="form-row">
      <div class="form-group">
        <%= form.label :zip_code, 'CEP', class: 'form-label' %>
        <%= form.text_field :zip_code, class: 'form-control', id: 'zip_code', placeholder: '00000-000', oninput: 'formatZipCode(this.value)' %>
      </div>
      <div class="form-group">
        <%= form.label :state_registration, 'Inscrição Estadual', class: 'form-label' %>
        <%= form.text_field :state_registration, class: 'form-control', id: 'state_registration', placeholder: '000.000.000.000', oninput: 'formatStateRegistration(this.value)' %>
      </div>
    </div>

    <div class="form-group">
      <%= form.label :address, 'Endereço Completo', class: 'form-label' %>
      <%= form.text_area :address, class: 'form-control', rows: 2, placeholder: 'Rua, número, bairro, cidade, estado' %>
    </div>

    <!-- Seção de Contatos -->
    <div class="contact-section">
      <div class="contact-header">
        <h4 class="contact-title">Pessoas de Contato</h4>
        <button type="button" class="btn btn-primary" onclick="addContact()">
          <span>+</span>
          <span>Adicionar Contato</span>
        </button>
      </div>
      
      <div id="contacts-container">
        <%= form.fields_for :contacts do |contact_form| %>
          <div class="contact-item">
            <button type="button" class="contact-remove" onclick="removeContact(this)">×</button>
            <div class="form-row">
              <div class="form-group">
                <%= contact_form.label :name, 'Nome', class: 'form-label' %>
                <%= contact_form.text_field :name, class: 'form-control', required: true %>
              </div>
              <div class="form-group">
                <%= contact_form.label :email, 'Email', class: 'form-label' %>
                <%= contact_form.email_field :email, class: 'form-control', required: true %>
              </div>
            </div>
            <div class="form-row">
              <div class="form-group">
                <%= contact_form.label :phone, 'Telefone', class: 'form-label' %>
                <%= contact_form.telephone_field :phone, class: 'form-control', placeholder: '(00) 00000-0000', oninput: 'formatPhone(this.value)', required: true %>
              </div>
              <div class="form-group">
                <%= contact_form.label :position, 'Cargo', class: 'form-label' %>
                <%= contact_form.text_field :position, class: 'form-control', required: true %>
              </div>
            </div>

            <%= contact_form.hidden_field :_destroy %>
          </div>
        <% end %>
      </div>
    </div>

    <div style="display: flex; gap: 12px; margin-top: 24px;">
      <%= form.submit 'Cadastrar Cliente', class: 'btn btn-primary' %>
      <%= link_to 'Cancelar', clients_path, class: 'btn btn-secondary' %>
    </div>
  <% end %>
</div>

<script>
// Formatação automática
function formatZipCode(value) {
  const input = document.getElementById('zip_code');
  let formatted = value.replace(/\D/g, '');
  if (formatted.length > 5) {
    formatted = formatted.substring(0, 5) + '-' + formatted.substring(5, 8);
  }
  input.value = formatted;
}

function formatStateRegistration(value) {
  const input = document.getElementById('state_registration');
  let formatted = value.replace(/\D/g, '');
  if (formatted.length > 3) {
    formatted = formatted.substring(0, 3) + '.' + formatted.substring(3);
  }
  if (formatted.length > 7) {
    formatted = formatted.substring(0, 7) + '.' + formatted.substring(7);
  }
  if (formatted.length > 11) {
    formatted = formatted.substring(0, 11) + '.' + formatted.substring(11);
  }
  input.value = formatted;
}

function formatDocument(value) {
  const input = document.getElementById('document_number');
  const documentType = document.querySelector('select[name="client[document_type]"]').value;
  let formatted = value.replace(/\D/g, '');
  
  if (documentType === 'CPF') {
    if (formatted.length > 3) {
      formatted = formatted.substring(0, 3) + '.' + formatted.substring(3);
    }
    if (formatted.length > 7) {
      formatted = formatted.substring(0, 7) + '.' + formatted.substring(7);
    }
    if (formatted.length > 11) {
      formatted = formatted.substring(0, 11) + '-' + formatted.substring(11);
    }
  } else if (documentType === 'CNPJ') {
    if (formatted.length > 2) {
      formatted = formatted.substring(0, 2) + '.' + formatted.substring(2);
    }
    if (formatted.length > 6) {
      formatted = formatted.substring(0, 6) + '.' + formatted.substring(6);
    }
    if (formatted.length > 10) {
      formatted = formatted.substring(0, 10) + '/' + formatted.substring(10);
    }
    if (formatted.length > 15) {
      formatted = formatted.substring(0, 15) + '-' + formatted.substring(15);
    }
  }
  
  input.value = formatted;
}

function formatPhone(value) {
  const input = event.target;
  let formatted = value.replace(/\D/g, '');
  
  if (formatted.length > 0) {
    formatted = '(' + formatted;
  }
  if (formatted.length > 3) {
    formatted = formatted.substring(0, 3) + ') ' + formatted.substring(3);
  }
  if (formatted.length > 10) {
    formatted = formatted.substring(0, 10) + '-' + formatted.substring(10, 14);
  }
  
  input.value = formatted;
}

function updateDocumentPlaceholder() {
  const documentType = document.querySelector('select[name="client[document_type]"]').value;
  const input = document.getElementById('document_number');
  
  if (documentType === 'CPF') {
    input.placeholder = '000.000.000-00';
  } else if (documentType === 'CNPJ') {
    input.placeholder = '00.000.000/0000-00';
  }
  
  input.value = '';
}

function addContact() {
  const contactContainer = document.getElementById('contacts-container');
  const contactIndex = contactContainer.children.length;
  const contactHtml = `
    <div class="contact-item">
      <button type="button" class="contact-remove" onclick="removeContact(this)">×</button>
      <div class="form-row">
        <div class="form-group">
          <label class="form-label">Nome</label>
          <input type="text" name="client[contacts_attributes][${contactIndex}][name]" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label">Email</label>
          <input type="email" name="client[contacts_attributes][${contactIndex}][email]" class="form-control" required>
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label class="form-label">Telefone</label>
          <input type="tel" name="client[contacts_attributes][${contactIndex}][phone]" class="form-control" placeholder="(00) 00000-0000" oninput="formatPhone(this.value)" required>
        </div>
        <div class="form-group">
          <label class="form-label">Cargo</label>
          <input type="text" name="client[contacts_attributes][${contactIndex}][position]" class="form-control" required>
        </div>
      </div>
      <input type="hidden" name="client[contacts_attributes][${contactIndex}][_destroy]" value="0">
    </div>
  `;
  contactContainer.insertAdjacentHTML('beforeend', contactHtml);
}

function removeContact(button) {
  const contactItem = button.closest('.contact-item');
  const destroyField = contactItem.querySelector('input[name*="[_destroy]"]');
  if (destroyField) {
    destroyField.value = '1';
    contactItem.style.display = 'none';
  } else {
    contactItem.remove();
  }
}
</script>
