<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
      <div class="card">
        <div class="card-header">
          <h2 class="text-center mb-0">Cadastro</h2>
        </div>
        <div class="card-body">
          <%= form_with model: @user, url: signup_path, local: true, html: { id: 'signup-form' } do |form| %>
            <% if @user.errors.any? %>
              <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <h6 class="alert-heading">Erros encontrados:</h6>
                <ul class="mb-0">
                  <% @user.errors.full_messages.each do |msg| %>
                    <li><%= msg %></li>
                  <% end %>
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
              </div>
            <% end %>

            <div class="row">
              <div class="col-md-12 mb-3">
                <%= form.label :name, 'Nome Completo', class: 'form-label' %>
                <%= form.text_field :name, 
                    class: 'form-control',
                    autofocus: true,
                    required: true,
                    placeholder: 'Digite seu nome completo' %>
                <div class="invalid-feedback" id="name-error"></div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-12 mb-3">
                <%= form.label :email, 'Email', class: 'form-label' %>
                <%= form.email_field :email, 
                    class: 'form-control',
                    required: true,
                    pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$',
                    title: 'Digite um email válido',
                    placeholder: 'seu@email.com' %>
                <div class="invalid-feedback" id="email-error"></div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6 mb-3">
                <%= form.label :password, 'Senha', class: 'form-label' %>
                <%= form.password_field :password, 
                    class: 'form-control',
                    required: true,
                    minlength: 8,
                    placeholder: 'Digite sua senha',
                    id: 'password-field' %>
                <div class="invalid-feedback" id="password-error"></div>
                <div class="form-text">
                  <small class="text-muted">
                    A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.
                  </small>
                </div>
              </div>

              <div class="col-md-6 mb-3">
                <%= form.label :password_confirmation, 'Confirmar Senha', class: 'form-label' %>
                <%= form.password_field :password_confirmation, 
                    class: 'form-control',
                    required: true,
                    placeholder: 'Confirme sua senha',
                    id: 'password-confirmation-field' %>
                <div class="invalid-feedback" id="password-confirmation-error"></div>
              </div>
            </div>

            <!-- Indicador de força da senha -->
            <div class="mb-3">
              <label class="form-label">Força da Senha:</label>
              <div class="progress mb-2" style="height: 8px;">
                <div class="progress-bar" id="password-strength-bar" role="progressbar" style="width: 0%"></div>
              </div>
              <div id="password-requirements" class="small text-muted">
                <div id="req-length" class="text-danger">✓ Pelo menos 8 caracteres</div>
                <div id="req-uppercase" class="text-danger">✓ Uma letra maiúscula</div>
                <div id="req-lowercase" class="text-danger">✓ Uma letra minúscula</div>
                <div id="req-number" class="text-danger">✓ Um número</div>
                <div id="req-special" class="text-danger">✓ Um caractere especial (!@#$%^&*)</div>
              </div>
            </div>

            <div class="d-grid">
              <%= form.submit 'Cadastrar', class: 'btn btn-primary btn-lg', id: 'signup-btn' %>
            </div>
          <% end %>

          <div class="text-center mt-3">
            <p class="mb-0">Já possui conta? <%= link_to 'Entrar', login_path, class: 'text-decoration-none' %></p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('signup-form');
  const nameField = form.querySelector('input[name="user[name]"]');
  const emailField = form.querySelector('input[name="user[email]"]');
  const passwordField = document.getElementById('password-field');
  const passwordConfirmationField = document.getElementById('password-confirmation-field');
  const submitBtn = document.getElementById('signup-btn');

  // Validação de nome
  nameField.addEventListener('input', function() {
    const name = this.value.trim();
    if (name && name.length < 2) {
      this.classList.add('is-invalid');
      document.getElementById('name-error').textContent = 'Nome deve ter pelo menos 2 caracteres';
    } else {
      this.classList.remove('is-invalid');
      document.getElementById('name-error').textContent = '';
    }
  });

  // Validação de email
  emailField.addEventListener('input', function() {
    const email = this.value.trim();
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    
    if (email && !emailRegex.test(email)) {
      this.classList.add('is-invalid');
      document.getElementById('email-error').textContent = 'Digite um email válido';
    } else {
      this.classList.remove('is-invalid');
      document.getElementById('email-error').textContent = '';
    }
  });

  // Validação de senha forte
  function validatePassword(password) {
    const requirements = {
      length: password.length >= 8,
      uppercase: /[A-Z]/.test(password),
      lowercase: /[a-z]/.test(password),
      number: /\d/.test(password),
      special: /[!@#$%^&*]/.test(password)
    };

    // Atualizar indicadores visuais
    document.getElementById('req-length').className = requirements.length ? 'text-success' : 'text-danger';
    document.getElementById('req-uppercase').className = requirements.uppercase ? 'text-success' : 'text-danger';
    document.getElementById('req-lowercase').className = requirements.lowercase ? 'text-success' : 'text-danger';
    document.getElementById('req-number').className = requirements.number ? 'text-success' : 'text-danger';
    document.getElementById('req-special').className = requirements.special ? 'text-success' : 'text-danger';

    // Calcular força da senha
    const strength = Object.values(requirements).filter(Boolean).length;
    const strengthBar = document.getElementById('password-strength-bar');
    
    if (strength <= 2) {
      strengthBar.className = 'progress-bar bg-danger';
      strengthBar.style.width = '20%';
    } else if (strength <= 3) {
      strengthBar.className = 'progress-bar bg-warning';
      strengthBar.style.width = '40%';
    } else if (strength <= 4) {
      strengthBar.className = 'progress-bar bg-info';
      strengthBar.style.width = '60%';
    } else {
      strengthBar.className = 'progress-bar bg-success';
      strengthBar.style.width = '100%';
    }

    return requirements;
  }

  passwordField.addEventListener('input', function() {
    const password = this.value;
    const requirements = validatePassword(password);
    
    if (password && !requirements.length) {
      this.classList.add('is-invalid');
      document.getElementById('password-error').textContent = 'A senha deve ter pelo menos 8 caracteres';
    } else {
      this.classList.remove('is-invalid');
      document.getElementById('password-error').textContent = '';
    }

    // Validar confirmação de senha
    if (passwordConfirmationField.value) {
      validatePasswordConfirmation();
    }
  });

  // Validação de confirmação de senha
  function validatePasswordConfirmation() {
    const password = passwordField.value;
    const confirmation = passwordConfirmationField.value;
    
    if (confirmation && password !== confirmation) {
      passwordConfirmationField.classList.add('is-invalid');
      document.getElementById('password-confirmation-error').textContent = 'As senhas não coincidem';
    } else {
      passwordConfirmationField.classList.remove('is-invalid');
      document.getElementById('password-confirmation-error').textContent = '';
    }
  }

  passwordConfirmationField.addEventListener('input', validatePasswordConfirmation);

  // Validação antes do envio
  form.addEventListener('submit', function(e) {
    const name = nameField.value.trim();
    const email = emailField.value.trim();
    const password = passwordField.value;
    const confirmation = passwordConfirmationField.value;
    let isValid = true;

    // Validar nome
    if (!name) {
      nameField.classList.add('is-invalid');
      document.getElementById('name-error').textContent = 'Nome é obrigatório';
      isValid = false;
    } else if (name.length < 2) {
      nameField.classList.add('is-invalid');
      document.getElementById('name-error').textContent = 'Nome deve ter pelo menos 2 caracteres';
      isValid = false;
    }

    // Validar email
    if (!email) {
      emailField.classList.add('is-invalid');
      document.getElementById('email-error').textContent = 'Email é obrigatório';
      isValid = false;
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
      emailField.classList.add('is-invalid');
      document.getElementById('email-error').textContent = 'Digite um email válido';
      isValid = false;
    }

    // Validar senha
    const requirements = validatePassword(password);
    if (!password) {
      passwordField.classList.add('is-invalid');
      document.getElementById('password-error').textContent = 'Senha é obrigatória';
      isValid = false;
    } else if (!Object.values(requirements).every(Boolean)) {
      passwordField.classList.add('is-invalid');
      document.getElementById('password-error').textContent = 'A senha não atende aos requisitos de segurança';
      isValid = false;
    }

    // Validar confirmação
    if (!confirmation) {
      passwordConfirmationField.classList.add('is-invalid');
      document.getElementById('password-confirmation-error').textContent = 'Confirmação de senha é obrigatória';
      isValid = false;
    } else if (password !== confirmation) {
      passwordConfirmationField.classList.add('is-invalid');
      document.getElementById('password-confirmation-error').textContent = 'As senhas não coincidem';
      isValid = false;
    }

    if (!isValid) {
      e.preventDefault();
      return false;
    }

    // Desabilitar botão durante o envio
    submitBtn.disabled = true;
    submitBtn.textContent = 'Cadastrando...';
  });
});
</script>
